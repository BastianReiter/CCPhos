dplyr::rename(RawDataSet[[TableName]], any_of(vc_Lookup))      # Returns a tibble
})
# Re-set table names
names(ls_CuratedDataSet) <- names(RawDataSet)
ProgressBar$tick()
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Definition of features to monitor during Curation (Transformation)
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Object syntax: List of vectors
#     - Vector names = Name of feature to be monitored during Curation (Transformation)
#     - Vector values = Set of eligible values defined in Meta Data
# If a feature should be monitored but has no specific set of eligible values, set it NULL
#-------------------------------------------------------------------------------
ls_MonitorFeatures_BioSampling <- list(SampleType = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleType")$Value_Curated,
SampleAliquot = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleAliquot")$Value_Curated)
ls_MonitorFeatures_Diagnosis <- list(ICD10Version = NULL,
LocalizationSide = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Diagnosis" & FeatureName == "LocalizationSide")$Value_Curated)
ls_MonitorFeatures_Histology <- list(Grading = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Histology" & FeatureName == "Grading")$Value_Curated)
ls_MonitorFeatures_Metastasis <- list(MetastasisLocalization = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Metastasis" & FeatureName == "MetastasisLocalization")$Value_Curated)
ls_MonitorFeatures_MolecularDiagnostics <- list()
ls_MonitorFeatures_Patient <- list(Gender = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "Gender")$Value_Curated,
LastVitalStatus = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "LastVitalStatus")$Value_Curated)
ls_MonitorFeatures_Progress <- list(GlobalStatus = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "GlobalStatus")$Value_Curated,
LocalStatus = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LocalStatus")$Value_Curated,
LymphnodalStatus = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LymphnodalStatus")$Value_Curated,
MetastasisStatus = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "MetastasisStatus")$Value_Curated)
ls_MonitorFeatures_RadiationTherapy <- list(RadiationTherapyRelationToSurgery = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyRelationToSurgery")$Value_Curated,
RadiationTherapyIntention = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyIntention")$Value_Curated)
ls_MonitorFeatures_Staging <- list(UICCStage = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage")$Value_Curated,
TNM_T = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T")$Value_Curated,
TNM_N = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N")$Value_Curated,
TNM_M = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M")$Value_Curated,
TNM_T_Prefix = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix")$Value_Curated,
TNM_N_Prefix = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix")$Value_Curated,
TNM_M_Prefix = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix")$Value_Curated,
TNM_ySymbol = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_ySymbol")$Value_Curated,
TNM_rSymbol = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_rSymbol")$Value_Curated,
TNM_mSymbol = NULL)
ls_MonitorFeatures_Surgery <- list(SurgeryIntention = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "SurgeryIntention")$Value_Curated,
ResidualAssessmentLocal = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentLocal")$Value_Curated,
ResidualAssessmentTotal = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentTotal")$Value_Curated)
ls_MonitorFeatures_SystemicTherapy <- list(IsChemotherapy = NULL,
IsImmunotherapy = NULL,
IsHormoneTherapy = NULL,
IsBoneMarrowTransplant = NULL,
SystemicTherapyIntention = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyIntention")$Value_Curated,
SystemicTherapyRelationToSurgery = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyRelationToSurgery")$Value_Curated)
# Put all objects in one list object to make them passable to functions (alphabetic order)
ls_MonitorFeatures_All <- list(ls_MonitorFeatures_BioSampling,
ls_MonitorFeatures_Diagnosis,
ls_MonitorFeatures_Histology,
ls_MonitorFeatures_Metastasis,
ls_MonitorFeatures_MolecularDiagnostics,
ls_MonitorFeatures_Patient,
ls_MonitorFeatures_Progress,
ls_MonitorFeatures_RadiationTherapy,
ls_MonitorFeatures_Staging,
ls_MonitorFeatures_Surgery,
ls_MonitorFeatures_SystemicTherapy)
ProgressBar$tick()
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# MONITORING: Track feature values of raw data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ls_Monitors_Raw <- purrr::map2(.x = ls_CuratedDataSet,
.y = ls_MonitorFeatures_All,
.f = function(DataFrame, MonitorFeatures)
{
DataFrame %>%
dsCCPhos::TrackFeatureValues(Features = MonitorFeatures,
CurationStage = "Raw")
})
ProgressBar$tick()
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# CURATION: Value transforming Operations
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Order of operations in each raw data frame:
#   1) Harmonizing and correctional transformation of data values using dsCCPhos::TransformData()
#   2) Recoding data using dsCCPhos::RecodeData()
#         - dsCCPhos::RecodeData() uses a dictionary in the form of a named vector to perform recoding on a target vector
#   3) Data formatting instructions
# Unpack list into data frames
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_BioSampling <- ls_CuratedDataSet$BioSampling
df_CDS_Diagnosis <- ls_CuratedDataSet$Diagnosis
df_CDS_Histology <- ls_CuratedDataSet$Histology
df_CDS_Metastasis <- ls_CuratedDataSet$Metastasis
df_CDS_MolecularDiagnostics <- ls_CuratedDataSet$MolecularDiagnostics
df_CDS_Patient <- ls_CuratedDataSet$Patient
df_CDS_Progress <- ls_CuratedDataSet$Progress
df_CDS_RadiationTherapy <- ls_CuratedDataSet$RadiationTherapy
df_CDS_Staging <- ls_CuratedDataSet$Staging
df_CDS_Surgery <- ls_CuratedDataSet$Surgery
df_CDS_SystemicTherapy <- ls_CuratedDataSet$SystemicTherapy
# Transform df_CDS_BioSampling
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_BioSampling <- df_CDS_BioSampling %>%
#--- Transformation ----------------------------------
dsCCPhos::TransformData(TableName = "BioSampling", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ----------------------------------------
mutate(SampleType = dsCCPhos::RecodeData(SampleType, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleType"),      # Looking up Feature to transform in Meta Data Table of Eligible Values
set_names(Value_Curated, Value_Raw))),      # This returns a vector of the form c("Value_Raw1" = "Value1", ...), thereby inducing replacement of original values with new ones as defined in Meta Data
SampleAliquot = dsCCPhos::RecodeData(SampleAliquot, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleAliquot"),
set_names(Value_Curated, Value_Raw))))
ProgressBar$tick()
# Transform df_CDS_Diagnosis
#~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Diagnosis <- df_CDS_Diagnosis %>%
#--- Transformation ------------------------------------
dsCCPhos::TransformData(TableName = "Diagnosis", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ------------------------------------------
mutate(LocalizationSide = dsCCPhos::RecodeData(LocalizationSide, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Diagnosis" & FeatureName == "LocalizationSide"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ----------------------------------------
mutate(ICD10Version = as.integer(str_extract(ICD10Version, "\\d+")))      # Extract ICD-10 catalogue version year from string
ProgressBar$tick()
# Transform df_CDS_Histology
#~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Histology <- df_CDS_Histology %>%
#--- Transformation ------------------------------------
dsCCPhos::TransformData(TableName = "Histology", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ------------------------------------------
mutate(Grading = dsCCPhos::RecodeData(Grading, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Histology" & FeatureName == "Grading"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Special -------------------------------------------
{ if ("HistologyID" %in% names(df_CDS_Histology))      # If column exists, extract integer number from string in HistologyID. Serves as surrogate for chronological order of events.
{ mutate(., HistologyID = as.integer(str_extract(HistologyID, "\\d+"))) }
else {.}
}
ProgressBar$tick()
# Transform df_CDS_Metastasis
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Metastasis <- df_CDS_Metastasis %>%
#--- Transformation ----------------------------------
dsCCPhos::TransformData(TableName = "Metastasis", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Formatting --------------------------------------
mutate(MetastasisDiagnosisDate = format(as_datetime(MetastasisDiagnosisDate), format = "%Y-%m-%d"),
HasMetastasis = as.logical(HasMetastasis))
ProgressBar$tick()
# Transform df_CDS_MolecularDiagnostics
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
#--- Transformation ------------------------
dsCCPhos::TransformData(TableName = "MolecularDiagnostics", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Formatting ----------------------------
mutate(MolecularDiagnosticsDate = format(as_datetime(MolecularDiagnosticsDate), format = "%Y-%m-%d"))
ProgressBar$tick()
# Transform df_CDS_Patient
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Patient <- df_CDS_Patient %>%
#--- Transformation ------------------------------------
dsCCPhos::TransformData(TableName = "Patient", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ------------------------------------------
mutate(Gender = dsCCPhos::RecodeData(Gender, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "Gender"),
set_names(Value_Curated, Value_Raw))),
LastVitalStatus = dsCCPhos::RecodeData(LastVitalStatus, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "LastVitalStatus"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ----------------------------------------
mutate(LastVitalStatusDate = format(as_datetime(LastVitalStatusDate), format = "%Y-%m-%d"))
ProgressBar$tick()
# Transform df_CDS_Progress
#~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Progress <- df_CDS_Progress %>%
#--- Transformation ------------------------------------
dsCCPhos::TransformData(TableName = "Progress", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ------------------------------------------
mutate(GlobalStatus = dsCCPhos::RecodeData(GlobalStatus, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "GlobalStatus"),
set_names(Value_Curated, Value_Raw))),
LocalStatus = dsCCPhos::RecodeData(LocalStatus, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LocalStatus"),
set_names(Value_Curated, Value_Raw))),
LymphnodalStatus = dsCCPhos::RecodeData(LymphnodalStatus, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LymphnodalStatus"),
set_names(Value_Curated, Value_Raw))),
MetastasisStatus = dsCCPhos::RecodeData(MetastasisStatus, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "MetastasisStatus"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ----------------------------------------
mutate(ProgressReportDate = format(as_datetime(ProgressReportDate), format = "%Y-%m-%d"))
ProgressBar$tick()
# Transform df_CDS_RadiationTherapy
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_RadiationTherapy <- df_CDS_RadiationTherapy %>%
#--- Transformation ----------------------------
dsCCPhos::TransformData(TableName = "RadiationTherapy", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ----------------------------------
mutate(RadiationTherapyRelationToSurgery = dsCCPhos::RecodeData(RadiationTherapyRelationToSurgery, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyRelationToSurgery"),
set_names(Value_Curated, Value_Raw))),
RadiationTherapyIntention = dsCCPhos::RecodeData(RadiationTherapyIntention, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyIntention"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting --------------------------------
mutate(RadiationTherapyStart = format(as_datetime(RadiationTherapyStart), format = "%Y-%m-%d"),
RadiationTherapyEnd = format(as_datetime(RadiationTherapyEnd), format = "%Y-%m-%d"))
ProgressBar$tick()
# Transform df_CDS_Staging
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Staging <- df_CDS_Staging %>%
#--- Transformation --------------------------------------
dsCCPhos::TransformData(TableName = "Staging", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding --------------------------------------------
mutate(UICCStage = dsCCPhos::RecodeData(UICCStage, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage"),
set_names(Value_Curated, Value_Raw))),
TNM_T = dsCCPhos::RecodeData(TNM_T, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T"),
set_names(Value_Curated, Value_Raw))),
TNM_N = dsCCPhos::RecodeData(TNM_N, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N"),
set_names(Value_Curated, Value_Raw))),
TNM_M = dsCCPhos::RecodeData(TNM_M, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M"),
set_names(Value_Curated, Value_Raw))),
TNM_T_Prefix = dsCCPhos::RecodeData(TNM_T_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_N_Prefix = dsCCPhos::RecodeData(TNM_N_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_M_Prefix = dsCCPhos::RecodeData(TNM_M_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ------------------------------------------
mutate(StagingReportDate = format(as_datetime(StagingReportDate), format = "%Y-%m-%d"))
# Transform df_CDS_Staging
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Staging <- df_CDS_Staging %>%
#--- Transformation --------------------------------------
dsCCPhos::TransformData(TableName = "Staging", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding --------------------------------------------
mutate(UICCStage = dsCCPhos::RecodeData(UICCStage, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage"),
set_names(Value_Curated, Value_Raw))),
TNM_T = dsCCPhos::RecodeData(TNM_T, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T"),
set_names(Value_Curated, Value_Raw))),
TNM_N = dsCCPhos::RecodeData(TNM_N, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N"),
set_names(Value_Curated, Value_Raw))),
TNM_M = dsCCPhos::RecodeData(TNM_M, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M"),
set_names(Value_Curated, Value_Raw))),
TNM_T_Prefix = dsCCPhos::RecodeData(TNM_T_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_N_Prefix = dsCCPhos::RecodeData(TNM_N_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_M_Prefix = dsCCPhos::RecodeData(TNM_M_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ------------------------------------------
mutate(StagingReportDate = format(as_datetime(StagingReportDate), format = "%Y-%m-%d"))
RuleSet_RawDataTransformation <- read_excel(path = "./Development/Data/MetaData/RuleSets.xlsx",
sheet = "RawDataTransformation")
# Save data in .rda-file and make it part of package
use_data(RuleSet_RawDataTransformation, overwrite = TRUE)
devtools::load_all(".")
# Transform df_CDS_Staging
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Staging <- df_CDS_Staging %>%
#--- Transformation --------------------------------------
dsCCPhos::TransformData(TableName = "Staging", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding --------------------------------------------
mutate(UICCStage = dsCCPhos::RecodeData(UICCStage, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage"),
set_names(Value_Curated, Value_Raw))),
TNM_T = dsCCPhos::RecodeData(TNM_T, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T"),
set_names(Value_Curated, Value_Raw))),
TNM_N = dsCCPhos::RecodeData(TNM_N, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N"),
set_names(Value_Curated, Value_Raw))),
TNM_M = dsCCPhos::RecodeData(TNM_M, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M"),
set_names(Value_Curated, Value_Raw))),
TNM_T_Prefix = dsCCPhos::RecodeData(TNM_T_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_N_Prefix = dsCCPhos::RecodeData(TNM_N_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_M_Prefix = dsCCPhos::RecodeData(TNM_M_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ------------------------------------------
mutate(StagingReportDate = format(as_datetime(StagingReportDate), format = "%Y-%m-%d"))
RuleSet_RawDataTransformation <- read_excel(path = "./Development/Data/MetaData/RuleSets.xlsx",
sheet = "RawDataTransformation")
# Save data in .rda-file and make it part of package
use_data(RuleSet_RawDataTransformation, overwrite = TRUE)
devtools::load_all(".")
# Transform df_CDS_Staging
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Staging <- df_CDS_Staging %>%
#--- Transformation --------------------------------------
dsCCPhos::TransformData(TableName = "Staging", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding --------------------------------------------
mutate(UICCStage = dsCCPhos::RecodeData(UICCStage, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage"),
set_names(Value_Curated, Value_Raw))),
TNM_T = dsCCPhos::RecodeData(TNM_T, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T"),
set_names(Value_Curated, Value_Raw))),
TNM_N = dsCCPhos::RecodeData(TNM_N, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N"),
set_names(Value_Curated, Value_Raw))),
TNM_M = dsCCPhos::RecodeData(TNM_M, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M"),
set_names(Value_Curated, Value_Raw))),
TNM_T_Prefix = dsCCPhos::RecodeData(TNM_T_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_N_Prefix = dsCCPhos::RecodeData(TNM_N_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix"),
set_names(Value_Curated, Value_Raw))),
TNM_M_Prefix = dsCCPhos::RecodeData(TNM_M_Prefix, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ------------------------------------------
mutate(StagingReportDate = format(as_datetime(StagingReportDate), format = "%Y-%m-%d"))
# Transform df_CDS_Surgery
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Surgery <- df_CDS_Surgery %>%
#--- Transformation --------------------------------------
dsCCPhos::TransformData(TableName = "Surgery", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding --------------------------------------------
mutate(SurgeryIntention = dsCCPhos::RecodeData(SurgeryIntention, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "SurgeryIntention"),
set_names(Value_Curated, Value_Raw))),
ResidualAssessmentLocal = dsCCPhos::RecodeData(ResidualAssessmentLocal, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentLocal"),
set_names(Value_Curated, Value_Raw))),
ResidualAssessmentTotal = dsCCPhos::RecodeData(ResidualAssessmentTotal, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentTotal"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Special ---------------------------------------------
{ if ("SurgeryID" %in% names(df_CDS_Surgery))      # If column exists, extract integer number from string in SurgeryID. Serves as surrogate for chronological order of events.
{ mutate(., SurgeryID = as.integer(str_extract(SurgeryID, "\\d+"))) }
else {.}
}
# Transform df_CDS_SystemicTherapy
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_SystemicTherapy <- df_CDS_SystemicTherapy %>%
#--- Transformation ------------------------------
dsCCPhos::TransformData(TableName = "SystemicTherapy", RuleSet = dsCCPhos::RuleSet_RawDataTransformation, RuleProfile = RuleProfile_RawDataTransformation) %>%
#--- Recoding ------------------------------------
mutate(SystemicTherapyIntention = dsCCPhos::RecodeData(SystemicTherapyIntention, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyIntention"),
set_names(Value_Curated, Value_Raw))),
SystemicTherapyRelationToSurgery = dsCCPhos::RecodeData(SystemicTherapyRelationToSurgery, with(dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyRelationToSurgery"),
set_names(Value_Curated, Value_Raw)))) %>%
#--- Formatting ----------------------------------
mutate(IsChemotherapy = as.logical(IsChemotherapy),
IsImmunotherapy = as.logical(IsImmunotherapy),
IsHormoneTherapy = as.logical(IsHormoneTherapy),
IsBoneMarrowTransplant = as.logical(IsBoneMarrowTransplant),
SystemicTherapyStart = format(as_datetime(SystemicTherapyStart), format = "%Y-%m-%d"),
SystemicTherapyEnd = format(as_datetime(SystemicTherapyEnd), format = "%Y-%m-%d"))
# Re-pack data frames into list
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
ls_CuratedDataSet <- list(BioSampling = df_CDS_BioSampling,
Diagnosis = df_CDS_Diagnosis,
Histology = df_CDS_Histology,
Metastasis = df_CDS_Metastasis,
MolecularDiagnostics = df_CDS_MolecularDiagnostics,
Patient = df_CDS_Patient,
Progress = df_CDS_Progress,
RadiationTherapy = df_CDS_RadiationTherapy,
Staging = df_CDS_Staging,
Surgery = df_CDS_Surgery,
SystemicTherapy = df_CDS_SystemicTherapy)
ls_Monitors_Transformed <- map2(.x = ls_CuratedDataSet,
.y = ls_MonitorFeatures_All,
.f = function(DataFrame, MonitorFeatures)
{
DataFrame %>%
dsCCPhos::TrackFeatureValues(Features = MonitorFeatures,
CurationStage = "Transformed")
})
ProgressBar$tick()
# Finalize df_CDS_BioSampling
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_BioSampling <- df_CDS_BioSampling %>%
mutate(SampleType = factor(SampleType,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleType")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleType")$Label_Curated),      # Convert to factor to mark ineligible values as NA and establish level order where appropriate
SampleAliquot = factor(SampleAliquot,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "BioSampling" & FeatureName == "SampleAliquot")$Value_Curated))
ProgressBar$tick()
# Finalize df_CDS_Diagnosis
#~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Diagnosis <- df_CDS_Diagnosis %>%
mutate(LocalizationSide = factor(LocalizationSide,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Diagnosis" & FeatureName == "LocalizationSide")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Diagnosis" & FeatureName == "LocalizationSide")$Label_Curated))
ProgressBar$tick()
# Finalize df_CDS_Histology
#~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Histology <- df_CDS_Histology %>%
mutate(Grading = factor(Grading,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Histology" & FeatureName == "Grading")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Histology" & FeatureName == "Grading")$Label_Curated))
ProgressBar$tick()
# Finalize df_CDS_Patient
#~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Patient <- df_CDS_Patient %>%
mutate(Gender = factor(Gender,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "Gender")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "Gender")$Label_Curated),
LastVitalStatus = factor(LastVitalStatus,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Patient" & FeatureName == "LastVitalStatus")$Value_Curated))
ProgressBar$tick()
# Finalize df_CDS_Progress
#~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Progress <- df_CDS_Progress %>%
mutate(GlobalStatus = factor(GlobalStatus,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "GlobalStatus")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "GlobalStatus")$Label_Curated),
LocalStatus = factor(LocalStatus,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LocalStatus")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LocalStatus")$Label_Curated),
LymphnodalStatus = factor(LymphnodalStatus,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LymphnodalStatus")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "LymphnodalStatus")$Label_Curated),
MetastasisStatus = factor(MetastasisStatus,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "MetastasisStatus")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Progress" & FeatureName == "MetastasisStatus")$Label_Curated))
ProgressBar$tick()
# Finalize df_CDS_RadiationTherapy
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_RadiationTherapy <- df_CDS_RadiationTherapy %>%
mutate(RadiationTherapyRelationToSurgery = factor(RadiationTherapyRelationToSurgery,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyRelationToSurgery")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyRelationToSurgery")$Label_Curated),
RadiationTherapyIntention = factor(RadiationTherapyIntention,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyIntention")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "RadiationTherapy" & FeatureName == "RadiationTherapyIntention")$Label_Curated))
ProgressBar$tick()
# Finalize df_CDS_Staging
#~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Staging <- df_CDS_Staging %>%
mutate(UICCStage = factor(UICCStage,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "UICCStage")$Value_Curated),
TNM_T = factor(TNM_T,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T")$Value_Curated),
TNM_N = factor(TNM_N,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N")$Value_Curated),
TNM_M = factor(TNM_M,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M")$Value_Curated),
TNM_T_Prefix = factor(TNM_T_Prefix,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_T_Prefix")$Value_Curated),
TNM_N_Prefix = factor(TNM_N_Prefix,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_N_Prefix")$Value_Curated),
TNM_M_Prefix = factor(TNM_M_Prefix,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_M_Prefix")$Value_Curated),
TNM_ySymbol = factor(TNM_ySymbol,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_ySymbol")$Value_Curated),
TNM_rSymbol = factor(TNM_rSymbol,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Staging" & FeatureName == "TNM_rSymbol")$Value_Curated))
# Finalize df_CDS_Surgery
#~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_Surgery <- df_CDS_Surgery %>%
mutate(SurgeryIntention = factor(SurgeryIntention,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "SurgeryIntention")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "SurgeryIntention")$Label_Curated),
ResidualAssessmentLocal = factor(ResidualAssessmentLocal,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentLocal")$Value_Curated),
ResidualAssessmentTotal = factor(ResidualAssessmentTotal,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "Surgery" & FeatureName == "ResidualAssessmentTotal")$Value_Curated))
# Finalize df_CDS_SystemicTherapy
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_CDS_SystemicTherapy <- df_CDS_SystemicTherapy %>%
mutate(SystemicTherapyRelationToSurgery = factor(SystemicTherapyRelationToSurgery,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyRelationToSurgery")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyRelationToSurgery")$Label_Curated),
SystemicTherapyIntention = factor(SystemicTherapyIntention,
levels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyIntention")$Value_Curated,
labels = dplyr::filter(dsCCPhos::Meta_ValueSets, TableName_Curated == "SystemicTherapy" & FeatureName == "SystemicTherapyIntention")$Label_Curated))
rm(list=ls())
library(dsCCPhos)
# Load test data into WD
load("./Development/Data/TestData/CCPTestData_Total.RData")
# Create virtual data base with test data
DBConnection <- MakeTestDB(CCPTestData_Total)
# Load raw test data from data base into WD
RawDataSet <- LoadRawData(DBConnection)
# Curate data
CurationOutput <- dsCCPhos::CurateDataDS(Name_RawDataSet = "RawDataSet",
RuleProfile_RawDataTransformation = "Default",
RuleProfile_DiagnosisRedundancy = "Default",
RuleProfile_DiagnosisAssociation = "Default")
View(CurationOutput$CurationReport$Monitor_Staging)
View(CurationOutput$CurationReport$Monitor_Staging)
View(CurationOutput$CuratedDataSet$Diagnosis)
View(CurationOutput$CuratedDataSet$Histology)
as_datetime("2013-06-25T00:00:00+02:00")
View(CurationOutput$CuratedDataSet$Metastasis)
View(CurationOutput$CuratedDataSet$Histology)
View(CurationOutput$CuratedDataSet$BioSampling)
df_BioSampling <- read_csv(file = "./Development/Data/TestData/CSV/sample/data.csv",
col_types = cols(.default = "c")) %>%
rename("sample-id" = entity_id)
df_Diagnosis <- read_csv(file = "./Development/Data/TestData/CSV/diagnosis/data.csv",
col_types = cols(.default = "c")) %>%
rename("diagnosis-id" = entity_id)
df_Histology <- read_csv(file = "./Development/Data/TestData/CSV/histology/data.csv",
col_types = cols(.default = "c")) %>%
rename("histology-id" = entity_id)
df_Metastasis <- read_csv(file = "./Development/Data/TestData/CSV/metastasis/data.csv",
col_types = cols(.default = "c")) %>%
rename("metastasis-id" = entity_id)
df_MolecularDiagnostics <- read_csv(file = "./Development/Data/TestData/CSV/molecular-marker/data.csv",
col_types = cols(.default = "c")) %>%
rename("mol-marker-id" = entity_id)
df_BioSampling <- read_csv(file = "./Development/Data/TestData/CSV/sample/data.csv",
col_types = cols(.default = "c")) %>%
rename("sample-id" = entity_id)
df_Diagnosis <- read_csv(file = "./Development/Data/TestData/CSV/diagnosis/data.csv",
col_types = cols(.default = "c")) %>%
rename("diagnosis-id" = entity_id)
df_Histology <- read_csv(file = "./Development/Data/TestData/CSV/histology/data.csv",
col_types = cols(.default = "c")) %>%
rename("histology-id" = entity_id)
df_Metastasis <- read_csv(file = "./Development/Data/TestData/CSV/metastasis/data.csv",
col_types = cols(.default = "c")) %>%
rename("metastasis-id" = entity_id)
df_MolecularDiagnostics <- read_csv(file = "./Development/Data/TestData/CSV/molecular-marker/data.csv",
col_types = cols(.default = "c")) %>%
rename("mol-marker-id" = entity_id)
df_Patient <- read_csv(file = "./Development/Data/TestData/CSV/patient/data.csv",
col_types = cols(.default = "c")) %>%
rename("patient-id" = entity_id)
df_Progress <- read_csv(file = "./Development/Data/TestData/CSV/progress/data.csv",
col_types = cols(.default = "c")) %>%
rename("progress-id" = entity_id)
df_RadiationTherapy <- read_csv(file = "./Development/Data/TestData/CSV/radiation-therapy/data.csv",
col_types = cols(.default = "c")) %>%
rename("radiation-therapy-id" = entity_id)
df_Staging <- read_csv(file = "./Development/Data/TestData/CSV/tnm/data.csv",
col_types = cols(.default = "c")) %>%
rename("tnm-id" = entity_id)
df_Surgery <- read_csv(file = "./Development/Data/TestData/CSV/surgery/data.csv",
col_types = cols(.default = "c")) %>%
rename("surgery-id" = entity_id)
df_SystemicTherapy <- read_csv(file = "./Development/Data/TestData/CSV/system-therapy/data.csv",
col_types = cols(.default = "c")) %>%
rename("systemic-therapy-id" = entity_id)
View(df_BioSampling)
