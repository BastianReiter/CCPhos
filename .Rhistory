EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Histology",
row_number() == n() ~ "Last Histology",
TRUE ~ NA)) %>%
nest(EventDetails = c(ICDOMorphologyCode,
ICDOMorphologyVersion,
Grading,
ICDOMorphologyComment)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform Metastasis data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_Metastasis <- df_CDS_Metastasis %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MetastasisDate, MetastasisID, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MetastasisDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnosis",
EventSubclass = "Metastasis",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Metastasis Diagnosis",
row_number() == n() ~ "Last Metastasis Diagnosis",
TRUE ~ NA)) %>%
nest(EventDetails = c(HasMetastasis,
Localization)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
if (nrow(df_CDS_MolecularDiagnostics) > 0)
{
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
}
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
if (nrow(df_CDS_MolecularDiagnostics) > 0)
{
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
}
if (nrow(df_CDS_MolecularDiagnostics) > 0)
{
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
}
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE)
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA))
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation))
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup()
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation))
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA))
View(df_Events_MolecularDiagnostics)
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation))
View(df_Events_MolecularDiagnostics)
View(df_Events_MolecularDiagnostics[[12]][[1]])
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
if (nrow(df_CDS_MolecularDiagnostics) > 0)
{
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup()
select(PatientID,
DiagnosisID,
starts_with("Event"))
}
# Transform MolecularDiagnostics data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_MolecularDiagnostics <- NULL
if (nrow(df_CDS_MolecularDiagnostics) > 0)
{
df_Events_MolecularDiagnostics <- df_CDS_MolecularDiagnostics %>%
group_by(PatientID, DiagnosisID) %>%
arrange(MolecularDiagnosticsDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = MolecularDiagnosticsDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnostics",
EventSubclass = "Molecular Diagnostics",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Molecular Diagnostics",
row_number() == n() ~ "Last Molecular Diagnostics",
TRUE ~ NA)) %>%
nest(EventDetails = c(Name,
Status,
Documentation)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
}
#--- Update PB ---
try(ProgressBar$tick())
# Transform Progress data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_Progress <- df_CDS_Progress %>%
group_by(PatientID, DiagnosisID) %>%
arrange(ProgressDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = ProgressDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnosis",
EventSubclass = "Progress",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Progress Report",
row_number() == n() ~ "Last Progress Report",
TRUE ~ NA)) %>%
nest(EventDetails = (c(GlobalStatus,
PrimarySiteStatus,
LymphnodalStatus,
MetastasisStatus))) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform RadiationTherapy data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_RadiationTherapy <- df_CDS_RadiationTherapy %>%
group_by(PatientID, DiagnosisID) %>%
arrange(RadiationTherapyStartDate, .by_group = TRUE) %>%
mutate(EventType = "Period",
EventDate = RadiationTherapyStartDate,
EventDateEnd = RadiationTherapyEndDate,
EventDateIsAdjusted = FALSE,
EventClass = "Therapy",
EventSubclass = "Radiation Therapy",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Radiation Period",
row_number() == n() ~ "Last Radiation Period",
TRUE ~ NA)) %>%
nest(EventDetails = c(Intention,
RelationToSurgery)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform Staging data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_Staging <- df_CDS_Staging %>%
group_by(PatientID, DiagnosisID) %>%
arrange(StagingDate, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = StagingDate,
EventDateIsAdjusted = FALSE,
EventClass = "Diagnosis",
EventSubclass = "Staging",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Staging",
row_number() == n() ~ "Last Staging",
TRUE ~ NA)) %>%
nest(EventDetails = (c(UICCStage,
TNM_T_Prefix,
TNM_T,
TNM_N_Prefix,
TNM_N,
TNM_M_Prefix,
TNM_M,
TNM_mSymbol,
TNM_rSymbol,
TNM_ySymbol,
TNMVersion,
TNM_L,
TNM_V,
TNM_Pn,
TNM_S))) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform Surgery data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_Surgery <- df_CDS_Surgery %>%
group_by(PatientID, DiagnosisID) %>%
arrange(SurgeryDate, SurgeryID, .by_group = TRUE) %>%
mutate(EventType = "Point",
EventDate = SurgeryDate,
EventDateIsAdjusted = FALSE,
EventClass = "Therapy",
EventSubclass = "Surgery",
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First Surgery",
row_number() == n() ~ "Last Surgery",
TRUE ~ NA)) %>%
nest(EventDetails = (c(Intention,
OPSCode,
ResidualAssessmentLocal,
ResidualAssessmentTotal))) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Transform SystemicTherapy data into Event-oriented data
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_Events_SystemicTherapy <- df_CDS_SystemicTherapy %>%
group_by(PatientID, DiagnosisID, SystemicTherapySubclass) %>%
arrange(SystemicTherapyStartDate, .by_group = TRUE) %>%
mutate(EventType = "Period",
EventDate = SystemicTherapyStartDate,
EventDateEnd = SystemicTherapyEndDate,
EventDateIsAdjusted = FALSE,
EventClass = "Therapy",
EventSubclass = SystemicTherapySubclass,
EventRankWithinSubclass = row_number(),
EventOrderSignificance = case_when(row_number() == 1 ~ "First in Systemic Therapy Subclass",
row_number() == n() ~ "Last in Systemic Therapy Subclass",
TRUE ~ NA)) %>%
nest(EventDetails = c(Intention,
Substances,
RelationToSurgery)) %>%
ungroup() %>%
select(PatientID,
DiagnosisID,
starts_with("Event"))
#--- Update PB ---
try(ProgressBar$tick())
# Consolidate Event-oriented data from CDS tables
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
df_ADS_Events <- df_ADS_Events %>%
bind_rows(df_Events_BioSampling,
df_Events_Histology,
df_Events_Metastasis,
df_Events_MolecularDiagnostics,
df_Events_Progress,
df_Events_RadiationTherapy,
df_Events_Staging,
df_Events_Surgery,
df_Events_SystemicTherapy) %>%
group_by(PatientID) %>%
fill(DateOfBirth,
.direction = "downup") %>%
group_by(PatientID, DiagnosisID) %>%
filter(!is.na(EventDate)) %>%
arrange(EventDate, .by_group = TRUE) %>%
# Important adjustment!
mutate(FirstEventDate = min(EventDate, na.rm = TRUE),
LastEventDate = max(EventDate, na.rm = TRUE),
EventDateIsAdjusted = case_when(EventSubclass == "InitialDiagnosis" & EventDate > FirstEventDate ~ TRUE,
EventClass == "VitalStatus" & EventDate < LastEventDate ~ TRUE,
.default = FALSE),
EventDate = case_when(EventSubclass == "InitialDiagnosis" ~ FirstEventDate,
EventClass == "VitalStatus" ~ LastEventDate,
.default = EventDate),
InitialDiagnosisDate = FirstEventDate,
EventRank = row_number(),
EventDaysSinceDiagnosis = round(as.numeric(difftime(EventDate, InitialDiagnosisDate, units = "days")), digits = 1),
EventPatientAge = floor(time_length(difftime(EventDate, DateOfBirth), unit = "years"))) %>%
select(PatientID,
DateOfBirth,
DiagnosisID,
InitialDiagnosisDate,
EventRank,
EventType,
EventDate,
EventDateEnd,
EventDateIsAdjusted,
EventPatientAge,
EventDaysSinceDiagnosis,
EventClass,
EventSubclass,
EventRankWithinSubclass,
EventOrderSignificance,
EventDetails) %>%
ungroup()
#--- Update PB ---
try(ProgressBar$tick())
#--- Terminate PB ---
try(ProgressBar$terminate())
View(df_ADS_Events)
View(df_ADS_Events[[16]][[15]])
View(df_CDS_Progress)
View(df_ADS_Events)
UnnestedEvents <- df_ADS_Events %>%
unnest(cols = c(EventDetails), keep_empty = TRUE)
View(UnnestedEvents)
#--- Set up progress bar -------------------------------------------------------
CountProgressItems <- 4
ProgressBar <- progress_bar$new(format = "Composing diagnosis-specific data [:bar] :percent in :elapsed  :spin",
total = CountProgressItems, clear = FALSE, width = 100)
try(ProgressBar$tick())
# Summarize diagnosis-specific event data using dsCCPhos::SummarizeEventData()
df_Aux_DiagnosisSummary_Events <- df_ADS_Events %>%
unnest(cols = c(EventDetails), keep_empty = TRUE) %>%
group_by(PatientID, DiagnosisID) %>%
group_modify(~ SummarizeEventData(EventEntries = .x,
ProgressBarObject = NULL)) %>%
ungroup()
df_Aux_DiagnosisData <- df_CDS_Diagnosis %>%
left_join(df_CDS_Staging, by = join_by(PatientID, DiagnosisID), suffix = c("_Diagnosis", "_Staging")) %>%
group_by(DiagnosisID) %>%
arrange(DiagnosisDate) %>%
slice_head() %>%
ungroup()
View(df_CDS_Diagnosis)
View(df_CDS_Staging)
View(df_Aux_DiagnosisData)
df_ADS_Diagnoses <- df_Aux_DiagnosisData %>%
left_join(df_Aux_DiagnosisSummary_Events, by = join_by(PatientID, DiagnosisID)) %>%
#filter(is.na(TimeDiagnosisToDeath) | TimeDiagnosisToDeath >= 0) %>%
ungroup()
View(df_ADS_Diagnoses)
?left_join
View(df_Aux_DiagnosisSummary_Events)
View(df_ADS_Events)
View(df_CDS_Progress)
View(df_ADS_Events)
View(UnnestedEvents)
View(df_ADS_Diagnoses)
library(readxl)
library(usethis)
Meta_Tables <- read_excel(path = "./Development/Data/MetaData/MetaDataCCPhos.xlsx",
sheet = "Tables")
# Save data in .rda-file and make it part of package
use_data(Meta_Tables, overwrite = TRUE)
Meta_Features <- read_excel(path = "./Development/Data/MetaData/MetaDataCCPhos.xlsx",
sheet = "Features")
# Save data in .rda-file and make it part of package
use_data(Meta_Features, overwrite = TRUE)
Meta_ValueSets <- read_excel(path = "./Development/Data/MetaData/MetaDataCCPhos.xlsx",
sheet = "ValueSets")
# Save data in .rda-file and make it part of package
use_data(Meta_ValueSets, overwrite = TRUE)
devtools::load_all(".")
View(UnnestedEvents)
View(df_CDS_Diagnosis)
View(df_CDS_Progress)
